doctype 5
html
  head
    title janux people - a social integration toolkit
    meta(name='viewport', content='width=device-width, initial-scale=1')
    
    link(rel='stylesheet', href='css/0-main.less', type='text/less', media='screen')
    script(src='js/less-1.4.1.min.js', type='text/javascript')
  body
    #canvas
      #logo
        img(src='img/janux_sage_256.png') 

      #masthead
        a(id='what-is-janux')
        h1#branding 
          span#janux janux 
          span#people people

      section#sidebar
        p
          a(href="#what-is-janux") What is Janux?
        p
          a(href="#janux-people") Janux People
        p
          a(href="#janux-authorization") Janux Authorization
        // p 
          a(href="#roadmap") Roadmap


      #maincolumn
        h2
          a(id='what-is-janux') What is Janux?

        p Janux is an open source integration tool that aims to make it easy to interconnect disparate software systems into a single logical application.  

        p One of our core beliefs is that business problems tend to change at a much smaller pace than the technology du-jour, and that we should thus focus on describing elegant solutions to common business problems that can be re-used in a variety of contexts, languages and platforms.

        p The goal of the project is to provide a set of models and service facades that are language-agnostic, and can interoperate with applications written in other languages via web services or other messaging mechanisms.  These concerns are closely aligned to ideas such as standardizing common business objects (such as a Postal Address) via microformats, or the notion of a 'Universal Business Model', though our focus is more on elegance and re-usability than standardization and universality. 

        p In its initial implementation, this project provides a set of web services to create, store and search entities representing person and organizations (see <a href="#janux-people">Janux People</a>), as well as provide a flexible permission-based scheme for authorizing the user accounts that may be associated with specific persons (see <a href="#janux-authorization">Janux Authorization</a>).

        p Janux currently takes the form of:
          ul
            li A set of abstract object models and service facades that model <a href="/api/biz/janux/people/Party.html" target="_new">Party</a>, <a href="/api/biz/janux/people/Person.html" target="_new">Person</a> and <a href="/api/biz/janux/people/Organization.html" target="_new">Organization</a> entities and related entities such as <a href="/api/biz/janux/geography/PostalAddress.html" target="_new">Postal Addresses</a> and other <a href="/api/biz/janux/people/ContactMethod.html" target="_new">Contact Methods</a>.  These models and services aim to represent commonly used business objects in a generic way, so that they can be used to integrate to a variety of use cases.  These abstract object models are represented as java interfaces and UML diagrams.

            li A set of object models and services that model <a href="/api/org/janux/bus/security/PermissionsCapable.html" target="_new">Permissions</a>, <a href="/api/org/janux/bus/security/Role.html" target="_new">Roles</a> and <a href="/api/org/janux/bus/security/Account.html" target="_new">Accounts</a> that can be used to create flexible and extensible authorization permission-based schemes to control access to business services, or to vary the User Interface according to the Permissions held by an authenticated User.

            li A high-quality, scaleable, lightweight yet robust java/spring/hibernate implementation of these models, that is exposed via web services.  The implementation is database agnostic, and currently uses mysql as the datastore.  While a relational database is quite sufficient to model these entities, we are also planning to integrate a NoSql database that is better suited to represent less structured data, such as a User's Profile, for example, which may vary widely according to the context in which it is used. 
            // See our <a href="#roadmap">Roadmap</a> for other anticipated features.

        h2
          a(id="janux-people") Janux People

        p <a href="api/biz/janux/people/package-summary.html#package_description" target="_new">High-level design of biz.janux.people package</a>
          

        h2
          a(id="janux-authorization") Janux Authorization

        p <a href="api/org/janux/bus/security/package-summary.html#package_description" target="_new">High-level design of org.janux.bus.security package</a>

        // h2
          a(id="roadmap") Roadmap

        include google_analytics



// vim: set fo=rq wrap:
